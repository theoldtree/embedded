
UltraSonicWaveBuzzer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000028a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000236  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000028a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002bc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ab9  00000000  00000000  0000031c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000080f  00000000  00000000  00000dd5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003d2  00000000  00000000  000015e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000019b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000043f  00000000  00000000  000019dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002e4  00000000  00000000  00001e1b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000020ff  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	cb c0       	rjmp	.+406    	; 0x232 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
#define SOUND_VELOCITY 340UL

int main(void)
{
	unsigned int distance;
	DDRB = 0x10;
  9e:	80 e1       	ldi	r24, 0x10	; 16
  a0:	87 bb       	out	0x17, r24	; 23
	DDRE = ((DDRE | (1<<TRIG))) & ~(1<<ECHO);
  a2:	82 b1       	in	r24, 0x02	; 2
  a4:	8f 77       	andi	r24, 0x7F	; 127
  a6:	80 64       	ori	r24, 0x40	; 64
  a8:	82 b9       	out	0x02, r24	; 2
    /* Replace with your application code */
    while (1) 
    {
		TCCR1B = 0x03;
  aa:	83 e0       	ldi	r24, 0x03	; 3
  ac:	8e bd       	out	0x2e, r24	; 46
		PORTE &= ~(1<<TRIG);
  ae:	83 b1       	in	r24, 0x03	; 3
  b0:	8f 7b       	andi	r24, 0xBF	; 191
  b2:	83 b9       	out	0x03, r24	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b4:	8f e3       	ldi	r24, 0x3F	; 63
  b6:	9c e9       	ldi	r25, 0x9C	; 156
  b8:	01 97       	sbiw	r24, 0x01	; 1
  ba:	f1 f7       	brne	.-4      	; 0xb8 <main+0x1a>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <main+0x20>
  be:	00 00       	nop
		_delay_ms(10);
		PORTE |= (1<<TRIG);
  c0:	83 b1       	in	r24, 0x03	; 3
  c2:	80 64       	ori	r24, 0x40	; 64
  c4:	83 b9       	out	0x03, r24	; 3
  c6:	ef e3       	ldi	r30, 0x3F	; 63
  c8:	fc e9       	ldi	r31, 0x9C	; 156
  ca:	31 97       	sbiw	r30, 0x01	; 1
  cc:	f1 f7       	brne	.-4      	; 0xca <main+0x2c>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <main+0x32>
  d0:	00 00       	nop
		_delay_ms(10);
		PORTE &= ~(1<<TRIG);
  d2:	83 b1       	in	r24, 0x03	; 3
  d4:	8f 7b       	andi	r24, 0xBF	; 191
  d6:	83 b9       	out	0x03, r24	; 3
		while(!(PINE & (1<<ECHO)));
  d8:	0f 9b       	sbis	0x01, 7	; 1
  da:	fe cf       	rjmp	.-4      	; 0xd8 <main+0x3a>
		TCNT1 = 0x00;
  dc:	1d bc       	out	0x2d, r1	; 45
  de:	1c bc       	out	0x2c, r1	; 44
		while(PINE & (1<<ECHO));
  e0:	0f 99       	sbic	0x01, 7	; 1
  e2:	fe cf       	rjmp	.-4      	; 0xe0 <main+0x42>
		TCCR1B = 0x00;
  e4:	1e bc       	out	0x2e, r1	; 46
		distance = (unsigned int)(SOUND_VELOCITY * (TCNT1 * 4/2)/1000);
  e6:	2c b5       	in	r18, 0x2c	; 44
  e8:	3d b5       	in	r19, 0x2d	; 45
  ea:	22 0f       	add	r18, r18
  ec:	33 1f       	adc	r19, r19
  ee:	22 0f       	add	r18, r18
  f0:	33 1f       	adc	r19, r19
  f2:	36 95       	lsr	r19
  f4:	27 95       	ror	r18
  f6:	a4 e5       	ldi	r26, 0x54	; 84
  f8:	b1 e0       	ldi	r27, 0x01	; 1
  fa:	8c d0       	rcall	.+280    	; 0x214 <__umulhisi3>
  fc:	28 ee       	ldi	r18, 0xE8	; 232
  fe:	33 e0       	ldi	r19, 0x03	; 3
 100:	40 e0       	ldi	r20, 0x00	; 0
 102:	50 e0       	ldi	r21, 0x00	; 0
 104:	65 d0       	rcall	.+202    	; 0x1d0 <__udivmodsi4>
		
		int i;
		if(distance < 300){
 106:	2c 32       	cpi	r18, 0x2C	; 44
 108:	f1 e0       	ldi	r31, 0x01	; 1
 10a:	3f 07       	cpc	r19, r31
 10c:	90 f0       	brcs	.+36     	; 0x132 <main+0x94>
 10e:	17 c0       	rjmp	.+46     	; 0x13e <main+0xa0>
			for(i=0; i<5; i ++){
				PORTB = 0x10;
 110:	20 e1       	ldi	r18, 0x10	; 16
 112:	28 bb       	out	0x18, r18	; 24
 114:	ef e9       	ldi	r30, 0x9F	; 159
 116:	ff e0       	ldi	r31, 0x0F	; 15
 118:	31 97       	sbiw	r30, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <main+0x7a>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <main+0x80>
 11e:	00 00       	nop
				_delay_ms(1);
				PORTB = 0x00;
 120:	18 ba       	out	0x18, r1	; 24
 122:	ef e9       	ldi	r30, 0x9F	; 159
 124:	ff e0       	ldi	r31, 0x0F	; 15
 126:	31 97       	sbiw	r30, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <main+0x88>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <main+0x8e>
 12c:	00 00       	nop
		TCCR1B = 0x00;
		distance = (unsigned int)(SOUND_VELOCITY * (TCNT1 * 4/2)/1000);
		
		int i;
		if(distance < 300){
			for(i=0; i<5; i ++){
 12e:	01 96       	adiw	r24, 0x01	; 1
 130:	02 c0       	rjmp	.+4      	; 0x136 <main+0x98>
 132:	80 e0       	ldi	r24, 0x00	; 0
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	85 30       	cpi	r24, 0x05	; 5
 138:	91 05       	cpc	r25, r1
 13a:	54 f3       	brlt	.-44     	; 0x110 <main+0x72>
 13c:	b6 cf       	rjmp	.-148    	; 0xaa <main+0xc>
				PORTB = 0x00;
				_delay_ms(1);
			}
		}
		
		else if(distance < 600){
 13e:	28 35       	cpi	r18, 0x58	; 88
 140:	f2 e0       	ldi	r31, 0x02	; 2
 142:	3f 07       	cpc	r19, r31
 144:	90 f0       	brcs	.+36     	; 0x16a <main+0xcc>
 146:	20 c0       	rjmp	.+64     	; 0x188 <main+0xea>
			for(i=0; i<50; i ++){
				PORTB = 0x10;
 148:	20 e1       	ldi	r18, 0x10	; 16
 14a:	28 bb       	out	0x18, r18	; 24
 14c:	ef e9       	ldi	r30, 0x9F	; 159
 14e:	ff e0       	ldi	r31, 0x0F	; 15
 150:	31 97       	sbiw	r30, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <main+0xb2>
 154:	00 c0       	rjmp	.+0      	; 0x156 <main+0xb8>
 156:	00 00       	nop
				_delay_ms(1);
				PORTB = 0x00;
 158:	18 ba       	out	0x18, r1	; 24
 15a:	ef e9       	ldi	r30, 0x9F	; 159
 15c:	ff e0       	ldi	r31, 0x0F	; 15
 15e:	31 97       	sbiw	r30, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <main+0xc0>
 162:	00 c0       	rjmp	.+0      	; 0x164 <main+0xc6>
 164:	00 00       	nop
				_delay_ms(1);
			}
		}
		
		else if(distance < 600){
			for(i=0; i<50; i ++){
 166:	01 96       	adiw	r24, 0x01	; 1
 168:	02 c0       	rjmp	.+4      	; 0x16e <main+0xd0>
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	82 33       	cpi	r24, 0x32	; 50
 170:	91 05       	cpc	r25, r1
 172:	54 f3       	brlt	.-44     	; 0x148 <main+0xaa>
 174:	ff ef       	ldi	r31, 0xFF	; 255
 176:	21 ee       	ldi	r18, 0xE1	; 225
 178:	84 e0       	ldi	r24, 0x04	; 4
 17a:	f1 50       	subi	r31, 0x01	; 1
 17c:	20 40       	sbci	r18, 0x00	; 0
 17e:	80 40       	sbci	r24, 0x00	; 0
 180:	e1 f7       	brne	.-8      	; 0x17a <main+0xdc>
 182:	00 c0       	rjmp	.+0      	; 0x184 <main+0xe6>
 184:	00 00       	nop
 186:	91 cf       	rjmp	.-222    	; 0xaa <main+0xc>
				_delay_ms(1);
			}
			_delay_ms(100);
		}
		
		else if(distance<1000){
 188:	28 3e       	cpi	r18, 0xE8	; 232
 18a:	33 40       	sbci	r19, 0x03	; 3
 18c:	90 f0       	brcs	.+36     	; 0x1b2 <main+0x114>
 18e:	8d cf       	rjmp	.-230    	; 0xaa <main+0xc>
			for(i=0; i<250; i ++){
				PORTB = 0x10;
 190:	20 e1       	ldi	r18, 0x10	; 16
 192:	28 bb       	out	0x18, r18	; 24
 194:	ef e9       	ldi	r30, 0x9F	; 159
 196:	ff e0       	ldi	r31, 0x0F	; 15
 198:	31 97       	sbiw	r30, 0x01	; 1
 19a:	f1 f7       	brne	.-4      	; 0x198 <main+0xfa>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <main+0x100>
 19e:	00 00       	nop
				_delay_ms(1);
				PORTB = 0x00;
 1a0:	18 ba       	out	0x18, r1	; 24
 1a2:	ef e9       	ldi	r30, 0x9F	; 159
 1a4:	ff e0       	ldi	r31, 0x0F	; 15
 1a6:	31 97       	sbiw	r30, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <main+0x108>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <main+0x10e>
 1ac:	00 00       	nop
			}
			_delay_ms(100);
		}
		
		else if(distance<1000){
			for(i=0; i<250; i ++){
 1ae:	01 96       	adiw	r24, 0x01	; 1
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <main+0x118>
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	8a 3f       	cpi	r24, 0xFA	; 250
 1b8:	91 05       	cpc	r25, r1
 1ba:	54 f3       	brlt	.-44     	; 0x190 <main+0xf2>
 1bc:	ff ef       	ldi	r31, 0xFF	; 255
 1be:	25 ea       	ldi	r18, 0xA5	; 165
 1c0:	8e e0       	ldi	r24, 0x0E	; 14
 1c2:	f1 50       	subi	r31, 0x01	; 1
 1c4:	20 40       	sbci	r18, 0x00	; 0
 1c6:	80 40       	sbci	r24, 0x00	; 0
 1c8:	e1 f7       	brne	.-8      	; 0x1c2 <main+0x124>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <main+0x12e>
 1cc:	00 00       	nop
 1ce:	6d cf       	rjmp	.-294    	; 0xaa <main+0xc>

000001d0 <__udivmodsi4>:
 1d0:	a1 e2       	ldi	r26, 0x21	; 33
 1d2:	1a 2e       	mov	r1, r26
 1d4:	aa 1b       	sub	r26, r26
 1d6:	bb 1b       	sub	r27, r27
 1d8:	fd 01       	movw	r30, r26
 1da:	0d c0       	rjmp	.+26     	; 0x1f6 <__udivmodsi4_ep>

000001dc <__udivmodsi4_loop>:
 1dc:	aa 1f       	adc	r26, r26
 1de:	bb 1f       	adc	r27, r27
 1e0:	ee 1f       	adc	r30, r30
 1e2:	ff 1f       	adc	r31, r31
 1e4:	a2 17       	cp	r26, r18
 1e6:	b3 07       	cpc	r27, r19
 1e8:	e4 07       	cpc	r30, r20
 1ea:	f5 07       	cpc	r31, r21
 1ec:	20 f0       	brcs	.+8      	; 0x1f6 <__udivmodsi4_ep>
 1ee:	a2 1b       	sub	r26, r18
 1f0:	b3 0b       	sbc	r27, r19
 1f2:	e4 0b       	sbc	r30, r20
 1f4:	f5 0b       	sbc	r31, r21

000001f6 <__udivmodsi4_ep>:
 1f6:	66 1f       	adc	r22, r22
 1f8:	77 1f       	adc	r23, r23
 1fa:	88 1f       	adc	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	1a 94       	dec	r1
 200:	69 f7       	brne	.-38     	; 0x1dc <__udivmodsi4_loop>
 202:	60 95       	com	r22
 204:	70 95       	com	r23
 206:	80 95       	com	r24
 208:	90 95       	com	r25
 20a:	9b 01       	movw	r18, r22
 20c:	ac 01       	movw	r20, r24
 20e:	bd 01       	movw	r22, r26
 210:	cf 01       	movw	r24, r30
 212:	08 95       	ret

00000214 <__umulhisi3>:
 214:	a2 9f       	mul	r26, r18
 216:	b0 01       	movw	r22, r0
 218:	b3 9f       	mul	r27, r19
 21a:	c0 01       	movw	r24, r0
 21c:	a3 9f       	mul	r26, r19
 21e:	70 0d       	add	r23, r0
 220:	81 1d       	adc	r24, r1
 222:	11 24       	eor	r1, r1
 224:	91 1d       	adc	r25, r1
 226:	b2 9f       	mul	r27, r18
 228:	70 0d       	add	r23, r0
 22a:	81 1d       	adc	r24, r1
 22c:	11 24       	eor	r1, r1
 22e:	91 1d       	adc	r25, r1
 230:	08 95       	ret

00000232 <_exit>:
 232:	f8 94       	cli

00000234 <__stop_program>:
 234:	ff cf       	rjmp	.-2      	; 0x234 <__stop_program>
